---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import { projectRelativeUrl } from '../../utils/base';
import { promises as fs } from 'fs';
import BarChart from '../../components/svelte/charts/BarChart.svelte';
import { getPluginDataArray } from '../../utils/data';

const dataArray = await getPluginDataArray();
const view = dataArray.view();
const licenseDataFile = await fs.readFile(projectRelativeUrl('../data/out/licenses.json'), 'utf-8');
const licenseDataPoints = view.license_data_points(dataArray, licenseDataFile);
---

<StarlightPage
	frontmatter={{
		title: 'Plugin Licenses',
		description: `An overview over the different licenses that plugins use.`,
	}}
	headings={[
		{ depth: 2, text: 'License Usage', slug: 'license-usage' },
		{ depth: 2, text: 'License Terms', slug: 'license-terms' },
		{ depth: 3, text: 'Permissions', slug: 'permissions' },
		{ depth: 3, text: 'Conditions', slug: 'conditions' },
		{ depth: 3, text: 'Limitations', slug: 'limitations' },
	]}
>
	<p>
		Licenses are important, they protect the authors work and give you as a user certain guarantees and limitations. It's important to know what you can and
		can't do with a plugin, such as redistributing it, modifying it, or using it in a commercial context. Another developer might want to continue development
		of an abandoned plugin, but whether they are allowed to, depends on the license. This page gives you an overview over the different licenses that plugins
		use.
	</p>

	<p>
		Licenses are extracted from <code>LICENSE</code> file in each plugin repository. The license text is then compared to a set of known licenses to determine the
		license. This process uses similarity matching, so the result may not be accurate.
	</p>

	<h2 id="license-usage">License Usage</h2>

	<p>The following chart shows the distribution of licenses in the plugins.</p>

	<p>
		<code>Not Found</code> means that a no license file was found in the repository root. Obsidian <a
			href="https://docs.obsidian.md/Developer+policies#Copyright+and+licensing"
			target="_blank"
		>
			requires a license file to be present
		</a> for new plugins, but this is not enforced retroactively.
	</p>

	<p>
		<code>Unrecognized</code> means that a license file was found, but the license could not be identified.
	</p>

	<BarChart dataPoints={licenseDataPoints.licenses} xLabel="License" yLabel="Number of Plugins" skewLabels hideBarValues client:idle />

	<p>Licenses that are used by more than 100 plugins are excluded from the chart below.</p>

	<BarChart
		dataPoints={licenseDataPoints.licenses.filter(x => x.value <= 100)}
		xLabel="License"
		yLabel="Number of Plugins"
		skewLabels
		hideBarValues
		client:idle
	/>

	<h2 id="license-terms">License Terms</h2>

	<p>The following charts show the distribution of license terms in the plugins. The terms are based on the licenses shown in the charts above.</p>

	<h3 id="permissions">Permissions</h3>

	<p>A number of plugins give the following permissions.</p>

	<BarChart dataPoints={licenseDataPoints.permissions} xLabel="Permission" yLabel="Number of Plugins" skewLabels hideBarValues client:idle />

	{
		licenseDataPoints.descriptions.permissions.map(x => (
			<p>
				<strong>{x.label}</strong>: {x.description}
			</p>
		))
	}

	<h3 id="conditions">Conditions</h3>

	<p>A number of plugins impose the following conditions.</p>

	<BarChart dataPoints={licenseDataPoints.conditions} xLabel="Condition" yLabel="Number of Plugins" skewLabels hideBarValues client:idle />

	{
		licenseDataPoints.descriptions.conditions.map(x => (
			<p>
				<strong>{x.label}</strong>: {x.description}
			</p>
		))
	}

	<h3 id="limitations">Limitations</h3>

	<p>A number of plugins impose the following limitations.</p>

	<BarChart dataPoints={licenseDataPoints.limitations} xLabel="Limitation" yLabel="Number of Plugins" skewLabels hideBarValues client:idle />

	{
		licenseDataPoints.descriptions.limitations.map(x => (
			<p>
				<strong>{x.label}</strong>: {x.description}
			</p>
		))
	}
</StarlightPage>
