---
import StarlightPage from '@astrojs/starlight/components/StarlightPage.astro';
import DownloadChart from '../../components/svelte/charts/downloads/DownloadChart.svelte';
import DownloadRelationChart from '../../components/svelte/charts/downloads/DownloadRelationChart.svelte';
import DownloadNameChart from '../../components/svelte/charts/downloads/DownloadNameChart.svelte';
import DownloadDistributionChart from '../../components/svelte/charts/downloads/DownloadDistributionChart.svelte';
import { getPluginDataArray } from '../../utils/data';

const data = await getPluginDataArray();
const view = data.view();

const downloadDataPoints = view.total_download_data(data);
const individualDownloadDataPoints = view.individual_download_data(data);

const downloadRelationDataPoints = individualDownloadDataPoints
	.filter(x => x.downloads > 0 && x.version_count > 0)
	.map(point => {
		return {
			date: new Date(point.date),
			downloads: point.downloads,
			version_count: point.version_count,
			total_loc: point.total_loc,
		};
	});

const downloadNameDataPoints = individualDownloadDataPoints
	.filter(x => x.downloads > 0 && x.version_count > 0)
	.sort((a, b) => a.name.localeCompare(b.name))
	.map(point => {
		return point.downloads;
	});

const downloadDistributionDataPoints = individualDownloadDataPoints
	.filter(x => x.downloads > 0 && x.version_count > 0)
	.sort((a, b) => b.downloads - a.downloads)
	.map(point => {
		return point.downloads;
	});
---

<StarlightPage
	frontmatter={{
		title: 'Plugin Downloads',
		description: `Stats about the download number of plugins.`,
	}}
	headings={[{ depth: 2, text: 'Plugin Downloads Correlations', slug: 'plugin-downloads-correlations' }]}
>
	<p>The first graph depicts the total number of plugin downloads over time. The second graph shows the number of new plugin downloads per week.</p>

	<DownloadChart dataPoints={downloadDataPoints} client:idle />

	<h2 id="plugin-downloads-correlations">Plugin Downloads Correlations</h2>

	<p>
		The first figure shows the correlation between the number of downloads and the number of releases. This shows that plugins with more downloads tend to have
		more releases. The second figure depicts the correlation between downloads and total line of code. The third figure shows the correlation between the number
		of downloads and the initial release time.
	</p>

	<DownloadRelationChart dataPoints={downloadRelationDataPoints} client:idle />

	<p>
		The chart below shows the correlation between the name of the plugin and the number of downloads. The regression line is calculated using the Simple Linear
		Regression algorithm. It is evident that there is a slight correlation between the placement of the plugin in the alphabet and the number of downloads.
	</p>

	<DownloadNameChart dataPoints={downloadNameDataPoints} client:idle />

	<p>
		This chart shows the overall distribution of downloads, it is clear that the majority of plugins have a low number of downloads, with a few plugins having a
		very high number of downloads.
	</p>

	<DownloadDistributionChart dataPoints={downloadDistributionDataPoints} client:idle />
</StarlightPage>
